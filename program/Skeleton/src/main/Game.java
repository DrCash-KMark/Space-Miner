package main;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Space-Miner
//  @ File Name : Game.java
//  @ Date : 17/03/2021
//  @ Author : Simon Zoltán
//
//



/**
 * Represents an instance of the running game. Hold reference to all the present Settlers, Robots and Planets in the game.
 * @author Simon
 *
 */
public class Game {
	private UI ui;
	
	//Lists of objects present in game:
	private List<Settler> settlers = new ArrayList<Settler>();
	private List<Controllable> controllables = new ArrayList<Controllable>();

	//Lists of objects scheduled to destroy:
	private List<Settler> settlersToRemove = new ArrayList<Settler>();
	private List<Controllable> controllablesToRemove = new ArrayList<Controllable>();
	
	
	//Event related:-----------------------------------------------------------------
	
	/**
	 * For testing only!
	 * Removes reference to objects, if they called destroyMe or killMe.
	 */
	public void cleanup () {
		for (Settler settler : settlersToRemove) {
			settlers.remove(settler);
		}
		
		for (Controllable controllable : controllablesToRemove) {
			controllables.remove(controllable);
		}
	}

	/**
	 * Adds Settler to Game.
	 * @param settler Settler to be added.
	 */
	public void addSettler(Settler settler) {
		settlers.add(settler);
	}
	
	public void addControllable(Controllable controllable) {
		controllables.add(controllable);
	}
	
	public void removeSettler(Settler settler) {
		settlersToRemove.add(settler);
	}
	
	public void removeControllable(Controllable controllable) {
		controllablesToRemove.add(controllable);
	}
	
	/**
	 * Called, when conditions of victory are met.
	 * Finishes the game.
	 */
	public void gameWon() {
		ui.displayMessage("The game is won!");
	}
	
	public Boolean isGameLost() {
		cleanup();
		
		if (settlers.size() == 0)
			return true;
		
		return true;
	}
	
	public void gameLost() {
		for (Settler settler : settlers)
			settlersToRemove.add(settler);
		
		for (Controllable controllable : controllables)
			controllablesToRemove.add(controllable);
		
		cleanup();
		
		ui.displayMessage("The game is lost!");
	}
	
	public void startTurn() {
		cleanup();
		
		for (Controllable controllable : controllables)
			controllable.onTurn();
	}
	
	public void listAllSettlers() {
		String ret = "";
		
		for (Settler settler : settlers)
			ret += settler.genUIString();
		
		ui.displayMessage(ret);
	}
	
	public void initGame(Boolean isManual) {
		if (isManual)
			return;
		
		Random rnd = new Random();
		
		int amountOfSuns = rnd.nextInt(10) + 10;
		int amountOfAsteroidsPerSun = rnd.nextInt(30) + 10;
		
		int amountOfSettlers = 10;
		int amountOfAliens = 30;
		
		for (int i = 0; i < amountOfSuns; i++) {
			Sun s = new Sun();
			
			addControllable(s);
			
			for (int j = 0; j < amountOfAsteroidsPerSun; j++) {
				Asteroid a = new Asteroid();
				a.initialize();
				
				s.addAsteroid(a);
				
				addControllable(a);
				
				if (j == 5) {
					for (int k = 0; k < amountOfSettlers; k++) {
						Settler set = new Settler();
						
						a.addSettler(set);
					}
					
					for (int k = 0; k < amountOfAliens; k++) {
						Alien ali = new Alien();
						
						a.addNonPlayer(ali);
					}
				}
			}
		}
	}
	
	// do we need this?
	public void executeCommand(String arguments) {
		
	}
	
	public void startGame() {
		startTurn();
	}
	
	public void loadGame(String fileName) {
		
	}
	
	public void saveGame(String fileName) {
		
	}
	
	public void list(String id) {
		Settler s;
		
		for (Settler settler : settlers) {
			if (settler.getId() == id)
				s = settler;
		}
		
		ui.displayMessage(s.genUIString());
	}
}
