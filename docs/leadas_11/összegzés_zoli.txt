
+---------------+
|	Összegzés	|
|		(Zoli)	|
+---------------+
		
--------------------------------------------------

+---------------+
|	1. leadás	|
+---------------+

Funkciók:
2. oldal:	Az aszteroidák naphoz viszonyított távolsága nem változik. <- Tud változni!

3. oldal (legfelül):	A napok véletlen időnként napkitörést idéznek elő, amely az egész aszteroidaövet végig futja. <- Nem futja végig az egész övet, csak az adott nap aszteroidáit!

3. oldal: Az aszteroidák magja mindig csak egyfajta nyersanyagból épül fel, ha nem üreges. <- Lehet benne többféle is.

3. oldal: Kiemelendő, hogy a telepes a már nála lévő nyersanyagokat visszahelyezheti egy üreges aszteroida magjába, de természetesen egy aszteroidába csak egyfajta nyersanyagot helyezhet vissza és egy körben csak egy egységnyit. <- Nem csak egyfélét helyezhet vissza.

3. oldal: A telepes az utazása során kinyert nyersanyagokat felhasználva képes a kapukat előállítani, amelyekből egyszerre kettő darab fér el nála. <-  Már három fér el nála.

3. oldal: A robotok csak szomszédos aszteroidák közötti mozgásra és fúrásra képesek. <- Nem csak szomszédos aszteroidára, hanem kapura is léphetnek.

3. oldal: Ha azonban sikerült minden fajta nyersanyagból legalább egy egységet kibányásznia és egy közös aszteroidára összegyűjteni azokat, akkor a telepesek felépíthetik a bázist és megnyerik a játékot. <- 3 egység kell mindből.

Írni kéne a szublimálásról.

--------------------------------------------------------------------------------------------

Use-case leírások:

fúrás:
2b: Ha az aszteroida tartalma radioaktív és az aszteroida napközelben tartózkodik, felrobban az aszteroida. <- Nem robban fel azonnal.

bányászás:  Bővíteni kellene, hogy az Alien is tudjon bányászni.	<- Elég a fogalmazást megváltoztatni.

visszahelyezés:
1b: Ha a telepes olyan átfúrt köpenyű aszteroidán tartózkodik, amely magjában található nyersanyag, de fér még ebből a nyersanyag típusból, akkor a saját tárolójában lévő nyersanyagok közül kiválaszthat ilyen típusú nyersanyagból egy egységnyit visszahelyezésre. <- Nem csak egyféle nyersanyag lehet egy aszteroidában.

autonóm cselekvés:
A robot autonóm módon dönt néhány cselekvés végrehajtásáról. Ezekből körönként egyet tud elvégezni a felhasználó beavatkozása nélkül. <- Nem csak robot, hanem űrlény is.
1a, 1b

napvihar:
1a. Ha napvihar alakul ki, a nem átfúrt köpenyű aszteroidán tartózkodó vagy entitások megsemmisülnek.
1b. Ha napvihar közben a telepesek vagy robotok átfúrt köpenyű aszteroidán tartózkodnak, akkor megmenekülnek a napvihartól. <- Nem csak átfúrt köpenyű, hanem üreges aszteroida is kell.

Use-case diagram:
A bányászást is inklúdolnia kell az Autonóm cselekvésnek!

+ Kellene a szublimáláshoz.

------------------------------------------------------------------------------------------

Szótár:

aktív teleportkapu: Egy teleportkapu akkor aktív, ha el van helyezve egy aszteroidán (tehát nincsen elpusztítva, illetve nem egy telepesnél van). <- =működés???

napkitörés: Egy random esemény mely az egész játéktérre kihat s annak elemeivel az elemek tulajdonságának megfelelően interaktál. <- Nem hat ki a teljes játéktérre.

radioaktív: Olyan speciális nyersanyag, amely napközelben kibányászva felrobban. <- Nem azonnal...

+ Kellene a szublimálás.

=========================================================================================================================================
=========================================================================================================================================



+---------------+
|	2. leadás	|
+---------------+

Ami az előző dokumentációhoz képest feltüntetett módosítás, de ennek javítjuk az előző dokumentációt:

Az aszteroidák naptól való távolsága a játékmenet során változhat.

Azon aszteroidák, amelyek magjában vízjég van új eseménnyel bővültek. Az ilyen aszteroidák, ha napközelbe kerülnek belőlük a víz elpárolog és üregessé válnak.

----------------------------------------------------------------------------------------------------

Objektum katalógus:

2. oldal: Azon objektum, amin telepesek és robotok állhatnak, valamint azon égitestek, amelyek között közlekedhetnek. <- Űrlények is.

2. oldadl: A sziklarétegek alatt legfeljebb egyfajta nyersanyag található meg minden esetben. <- Nem csak egyfajta nyersanyag található meg.

2. oldadl: Ha egy telepes vagy egy robot egy üreges aszteroidán tartózkodik akkor, ha napszél közeledik annak bekövetkezése előtt az üregben elbújik magától. <- Átfúrtnak is kell lennie.

2. oldal: Ha egy aszteroida felrobban, akkor a rajta álló telepesek meghalnak, valamint a rajta lévő robotok egy szomszédos aszteroidára sodródnak. <- Űrlényről is legyen szó!

2. A pályán elhelyezkedve napkitöréseket okoznak, amelyek az egész játéktéren végigsöpörnek.<- Nem az egész játéktéren.

3. oldal: A játékos által irányított telepes képes építeni bizonyos nyersanyagok bírtokában, de egyszerre mindig csak egy párt. <- Nem csak egy párt lehet.

3. oldal: Ha az aszteroida, ahonnan bányásszák napközelben van, akkor az aszteroida felrobban. <- Nincs szó a nem rögtöni felrobbanásról.

----------------------------------------------------------------------

Statikus struktúra diagramok
Az osztály diagramm elavult.

====================================================================================

Osztályok leírása


-----------------------------------------------------------
Asteroid
-----------------------------------------------------------

Ősosztályok
Printable -> Planet -> Asteroid

Interfészek
Controllable, ReactsToSunFlare

Attribútumok
material <- Helyette materials, ami lista.

entities <- Helyette nonPlayers és settlers

Hiányzó attribútumok
capacity
isRandom
mySun
rnd <- ezt valszeg nem kell.
owner: Game A játékot vezénylő objektum.
id: String	Egy adott objektumot azonosító egyedi jelölés.

Metódusok
addEntity (Entity e) <- Helyette addNonPlayer(NonPlayer) és addSettler(Settler) metódusok vannak.

removeEntity (Entity e) <- Helyette removeSettler és removeNonPlayer metódusok vannak.

getNotifiedAboutSunFlare() <- Ez nem a Controllable-ből jön, hanem a ReactsToSunFlare interface-ből.

Hiányzó metódusok
evaporateMaterial()
genSaveString()
genUIString()
initialize()
onTurn()



-----------------------------------------------------------
Base
-----------------------------------------------------------
Felelősség
Ez az osztály felel a bázis kezeléséért, itt tároljuk a bázis helyét illetve ez az osztály döni el, hogy egyáltalán meg tudjuk-e építeni azt. <-elírás: "döni".

Ősosztályok
Printable -> Building -> Base

Interfészek
Controllable, ReactsToSunFlare

Hiányzó attribútumok
hadActionThisTurn:	bool	Végzett-e műveletet a jelenlegi játékkörben.
owner:	Game				...
id: String	Egy adott objektumot azonosító egyedi jelölés.

Metódusok
isBuildable(I: Inventory) <- Ilyen nincs.

Hiányzó metódusok
destroy()
genSaveString(): String
genUIString(): String
getNotifiedAboutSunflare()



-------------------------------------------------------
Buildable
-------------------------------------------------------
Ilyen nincs.



-------------------------------------------------------
Building
-------------------------------------------------------
Ősosztályok
Printable

Interfészek
Controllable, ReactsToSunFlare

Hiányzó attribútumok
hadActionThisTurn:	bool	Végzett-e műveletet a jelenlegi játékkörben.
owner: Game			A játékot vezénylő objektumra mutató hivatkozás.
id: String			Egy adott objektumot azonosító egyedi jelölés.



-------------------------------------------------------
Coal
-------------------------------------------------------

Ősosztályok
Printable -> Material -> Coal

Attribútumok
canEvaporate : boolean	El tud-e párologni az anyag egy aszteroida belsejéből?
exposedCounter : int	Számolja, hogy hány kör során volt feltárt aszteroidában, miközben az aszteroida napközelben volt.
isRadio : boolean		Radioaktív-e a nyersanyag?
name : String			Megadja a nyersanyag típusának nevét.
id : String				Egy adott objektumot azonosító egyedi jelölés.

Metódusok
exposedAndCloseToSun(Asteroid a)	Körönként egyszer kell hívni, amikor egy a nyersanyag egy aszteroida üregében van, az aszteroida kérge teljesen át van fúrva, és az aszteroida napközelben van.
genSaveString(): String				Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String				Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.



-------------------------------------------------------
Controllable
-------------------------------------------------------
OK


-------------------------------------------------------
Entity
-------------------------------------------------------
Ősosztályok
Printable -> Entity

Interfészek
ReactsToSunFlare, Moving

Hiányzó attribútumok:
owner: Game			A játékot vezénylő objektumra mutató hivatkozás.
id : String			Egy adott objektumot azonosító egyedi jelölés.

Metódusok:
move <- Már két move van, de ezeket nem implementálja.

Összes metódus:
asteroidExploded()				Értesíti az entitást, hogy az aszteroida, amin állt megsemmisült. A konkrét implementáció az entitás típusától függ.
die()							Elpusztítja az entitást. A konkrét implementáció az entitás típusától függ.
genSaveString(): String			Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String			Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.
getNotifiedAboutSunflare()		Hatására az entitás elpusztítja magát, ha nem átfúrt kérgű vagy nem üreges belsejű aszteroidán tartózkodik.



-------------------------------------------------------
Game
-------------------------------------------------------
Attribútumok:
asteroids : List<Asteroid>				A játékban szereplő aszteroidák listája.
asteroidsToRemove : List<Asteroid>		Egy körben megsemmisülő aszteroidák listája. Ez a lista minden körben kiürül, amikor a Game végleg törli a hivatkozást az aszteroidákra.
nonPlayers : List<NonPlayer>			A játékban szereplő nem játékos által irányított entitások listája.
nonPlayersToRemove : List<NonPlayer>	Egy körben megsemmisülő nem játékos által irányított entitások listája. Ez a lista minden körben kiürül, amikor a Game végleg törli a hivatkozást az entitásokra.
settlers : List<Settler>				A játékban szereplő telepesek listája.
settlersToRemove : List<Settler>		Egy körben megsemmisülő telepesek listája. Ez a lista minden körben kiürül, amikor a Game végleg törli a hivatkozást a telepesekre.
suns : List<Sun>						A játékban szereplő napok listája.
sunsToRemove : List<Sun>				Egy körben megsemmisülő napok listája. Ez a lista minden körben kiürül, amikor a Game végleg törli a hivatkozást a napokra.
turnEvents : List<String>				Egy string lista, ami az adott körben lejátszódott eseményekről tájékoztatja a felhasználót.
ui : UI									Hivatkozás a felhasználói inputot megvalósító objektumra.

Metódusok:
addAsteroid(Asteroid)					Új aszteroidát ad a megfelelő listához.
addNonPlayer(NonPlayer)					Új nem játékos által irányított entitást ad a megfelelő listához.
addSettler(Settler)						Új telepest ad a megfelelő listához.
addSun(Sun)								Új napot ad a megfelelő listához.
addTurnEvent(String)					Új bejegyzéssel bővíti a kör eseményeit tároló listát.
cleanup()								Megszünteti a hivatkozást az összes megsemmisítére kijelölt telepesre, napra, aszteroidára és nem játékos által irányított entitásra.
gameLost()								Hívására a telepesek elvesztik a játékot.
gameWon()								Hívására a telepesek megnyerik a játékot.
initGame(isManual : Boolean)			Inicializálja a játékot. Ha false értékű paraméterrel hívjuk véletlenszerűen generálja a játékmezőt. 
isGameLost()							Akkor tekinti elveszítettnek a játszmát,ha nem maradt telepes.
listAll()								Struktúrált módon listázza a játékban szereplő összes főbb objektumhoz kapcsolódó információkat.
listAllSettlers()						Listázza a telepesekhez kapcsolódó információkat.
listTurnEvents()						Listázza egy körben történt eseményeket.
loadAlien(Scanner, String, List<Alien>, List<Asteroid>, List<Inventory>)	Az űrlény fájlból való betöltésére szolgál.
loadAsteroid(Scanner, List<Asteroid>, List<Settler>, List<Material>, List<Robot>, List<Alien>, List<Base>, List<StarGate>)	Az aszteroida fájlból való betöltésére szolgál.
loadBase(Scanner, String, List<Base>, List<Asteroid>)							A bázis fájlból való betöltésére szolgál.
loadGame()																		Betölti a "game.txt" fájlban tárolt játékállást.
loadInventory(Scanner, List<Inventory>, List<Material>, List<StarGate>)			A tároló fájlból való betöltésére szolgál.
loadMaterial(Material, String, Scanner, List<Material>)							A nyersanyag fájlból való betöltésére szolgál.
loadRobot(Scanner, String, List<Robot>, List<Asteroid>)							A robot fájlból való betöltésére szolgál.
loadSettler(Scanner, List<Settler>, List<Asteroid>, List<Inventory>)			A telepes fájlból való betöltésére szolgál.
loadStarGate(Scanner, String, List<StarGate>, List<Asteroid>)					A teleportkapu fájlból való betöltésére szolgál.
loadSun(Scanner, List<Sun>, List<Asteroid>)										A nap fájlból való betöltésére szolgál.
removeAsteroid(Asteroid)														A paraméterként kapott objektumot megsemmisítésre jelöli ki.
removeNonPlayer(NonPlayer)														A paraméterként kapott objektumot megsemmisítésre jelöli ki.
removeSettler(Settler)															A paraméterként kapott objektumot megsemmisítésre jelöli ki.
removeSun(Sun)																	A paraméterként kapott objektumot megsemmisítésre jelöli ki.
saveGame()																		Elmenti az aktuális játékállást a "game.txt" fájlba.
startGame()																		Az inicializálás után ezzel a metódussal indíthatjuk a játékot.
startTurn()																		Lezárja az előző kört. Megkezdi az újat. Felelőssége, hogy végleg törölje a hivatkozást az előző körben erre kijelölt objektumokra, és, hogy onTurn() hívást végezzen minden erre alkalmas objektumon.



-------------------------------------------------------
Ice
-------------------------------------------------------
Ősosztályok
Printable -> Material -> Coal

Attribútumok
canEvaporate : boolean	El tud-e párologni az anyag egy aszteroida belsejéből?
exposedCounter : int	Számolja, hogy hány kör során volt feltárt aszteroidában, miközben az aszteroida napközelben volt.
isRadio : boolean		Radioaktív-e a nyersanyag?
name : String			Megadja a nyersanyag típusának nevét.
id : String				Egy adott objektumot azonosító egyedi jelölés.

Metódusok
exposedAndCloseToSun(Asteroid a)	Körönként egyszer kell hívni, amikor egy a nyersanyag egy aszteroida üregében van, az aszteroida kérge teljesen át van fúrva, és az aszteroida napközelben van.
genSaveString(): String				Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String				Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.




-------------------------------------------------------
Inventory
-------------------------------------------------------
Attribútumok:
capacityM : int						A maximális mennyiség, amennyi nyersanyagot tárolni tud.
capacitySG : int					A maximális mennyiség, amennyi teleportkaput tárolni tud.
materials : LinkedList<Material>	A tárolt nyersanyagok.
starGates : LinkedList<StarGate>	A tárolt teleportkapuk.
id : String				Egy adott objektumot azonosító egyedi jelölés.

Metódusok:
addMaterial(Material)			Betesz egy nyersanyagot a tárolóba.
addStarGate(StarGate)			Betesz egy teleportkaput a tárolóba.
genSaveString(): String			Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String			Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.
isFullMaterials() : bool		Megtelt-e a tároló nyersanyagokkal?
isFullStarGates() : bool		Megtelt-e a tároló teleportkapukkal?
isHaveStarGate(StarGate) : bool	Tartalmazza-e a paraméterként kapott teleportkaput?
removeMaterial(Material) : Material Kivesz egy ugyanolyan típusú nyersanyagot, mint amilyet paraméterként kapott.
removeMaterialFromList(LinkedList<Material>, Material)	Egy paraméterként kapott listából vesz ki nyersanyagot.
removeStarGate(StarGate)		Kivesz egy paraméterként kapott nyersanyagot a tárolóból.
subSet(LinkedList<Material>) : LinkedList<Material>	Összehasonlítja a paraméterként kapott és a tárolóban lévő nyersanyag listát. Visszaadja a két lista különbségét.
subtraction(LinkedList<Material>) : LinkedList<Material>	Kivonja a paraméterként kapott listát a tárolóban lévő nyersanyag listából. Visszaadja a két lista különbségét.



-------------------------------------------------------
Iron
-------------------------------------------------------
Ősosztályok
Printable -> Material -> Coal

Attribútumok
canEvaporate : boolean	El tud-e párologni az anyag egy aszteroida belsejéből?
exposedCounter : int	Számolja, hogy hány kör során volt feltárt aszteroidában, miközben az aszteroida napközelben volt.
isRadio : boolean		Radioaktív-e a nyersanyag?
name : String			Megadja a nyersanyag típusának nevét.
id : String				Egy adott objektumot azonosító egyedi jelölés.

Metódusok
exposedAndCloseToSun(Asteroid a)	Körönként egyszer kell hívni, amikor egy a nyersanyag egy aszteroida üregében van, az aszteroida kérge teljesen át van fúrva, és az aszteroida napközelben van.
genSaveString(): String				Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String				Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.



-------------------------------------------------------
Material
-------------------------------------------------------
Ősosztályok
Printable -> Material

Attribútumok
canEvaporate : boolean	El tud-e párologni az anyag egy aszteroida belsejéből?
exposedCounter : int	Számolja, hogy hány kör során volt feltárt aszteroidában, miközben az aszteroida napközelben volt.
isRadio : boolean		Radioaktív-e a nyersanyag?
name : String			Megadja a nyersanyag típusának nevét.
id : String				Egy adott objektumot azonosító egyedi jelölés.

Metódusok
exposedAndCloseToSun(Asteroid a)	Körönként egyszer kell hívni, amikor egy a nyersanyag egy aszteroida üregében van, az aszteroida kérge teljesen át van fúrva, és az aszteroida napközelben van.
genSaveString(): String				Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String				Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.


----------------------------------------------------------
//Új bejegyzések:

-------------------------------------------------------
Mining
-------------------------------------------------------
Felelősség
Azon osztályok valósítják meg, amelyek képesek bányászni.

Ősosztályok

Interfészek

Attribútumok

Metódusok
mine()		Bányászás műveletét kell, hogy megvalósítsa.



-------------------------------------------------------
Moving
-------------------------------------------------------
Felelősség
Azon osztályok valósítják meg, amelyek képesek mozogni.

Ősosztályok

Interfészek

Attribútumok

Metódusok
move(Asteroid)		Aszteroidára történő mozgást kell, hogy implementálja.
move(StarGate)		Teleportkapura történő mozgást kell, hogy implementálja.



-------------------------------------------------------
NonPlayer
-------------------------------------------------------
Felelősség
A nem játékos által irányított entitások ősosztálya.

Ősosztályok
Printable -> Entity -> NonPlayer

Interfészek
Controllable, ReactsToSunFlare, Moving

Attribútumok
counter : int		Az önálló viselkedéshez szükséges változó, ami lehetővé teszi, hogy változatos cselekvéseket hajtson végre az entitás.
isRandom : boolean	Véletlenszerű viselkedést hajtson-e végre az entitás?
owner: Game			A játékot vezénylő objektumra mutató hivatkozás.
id : String			Egy adott objektumot azonosító egyedi jelölés.
asteroid : Asteroid : Azt tárolja, hogy az adott entitás éppen melyik aszteroidán tartózkodik.

Metódusok
asteroidExploded()				Értesíti az entitást, hogy az aszteroida, amin állt megsemmisült. A konkrét implementáció az entitás típusától függ.
die()							Elpusztítja az entitást.
genSaveString(): String			Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String			Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.
getNotifiedAboutSunflare()		Hatására az entitás elpusztítja magát, ha nem átfúrt kérgű vagy nem üreges belsejű aszteroidán tartózkodik.
move(Asteroid)					Az entitás egy szomszédos aszteroidára lép.
move(StarGate)					Az entitás egy teleportkapura lép.
onTurn()						Minden kör elején hívott metódus, ami az autonóm viselkedést valósítja meg.



-------------------------------------------------------
Planet
-------------------------------------------------------
Ősosztályok
Printable -> Planet

Attribútumok
owner: Game				A játékot vezénylő objektum.
id : String				Egy adott objektumot azonosító egyedi jelölés.


Metódusok
Nincs



----------------------------------------------------------
//Új bejegyzések:

-------------------------------------------------------
Printable
-------------------------------------------------------
Felelősség
Azon osztályok őse, amelyek szerializálhatóak, a felhasználó számára információkat lehet róluk megjeleníteni és egyedi azonosítóval rendelkeznek.

Ősosztályok


Interfészek


Attribútumok
nextId : int	Egy statikus változó, amely megjegyzi, hogy az összes objektum id-jében mi volt a legnagyobb kiosztott index.
id : String		Egy objektum egyedi azonosítója.

Metódusok
genSaveString(): String				Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String				Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.



-------------------------------------------------------
ReactsToSunFlare
-------------------------------------------------------
Felelősség
Ezt az interface-t azok az osztályok valósítják meg, amelyek valamilyen módon reagálni tudnak a napkitörésekre.

Ősosztályok

Interfészek

Attribútumok

Metódusok
getNotifiedAboutSunflare()		Hatására az entitás elpusztítja magát, ha nem átfúrt kérgű vagy nem üreges belsejű aszteroidán tartózkodik.



----------------------------------------------------------
//Régi bejegyzések:

-------------------------------------------------------
Robot
-------------------------------------------------------
Ősosztályok
Printable -> Entity -> NonPlayer -> Robot

Interfészek
Controllable, Drilling, ReactsToSunFlare, Moving

Attribútumok
counter : int		Az önálló viselkedéshez szükséges változó, ami lehetővé teszi, hogy változatos cselekvéseket hajtson végre az entitás.
isRandom : boolean	Véletlenszerű viselkedést hajtson-e végre az entitás?
owner: Game			A játékot vezénylő objektumra mutató hivatkozás.
id : String			Egy adott objektumot azonosító egyedi jelölés.
asteroid : Asteroid : Azt tárolja, hogy az adott entitás éppen melyik aszteroidán tartózkodik.

Metódusok
asteroidExploded()				Értesíti az entitást, hogy az aszteroida, amin állt megsemmisült. A konkrét implementáció az entitás típusától függ.
die()							Elpusztítja az entitást.
drill()							A robot fúr egyet az aszteroidáján.
genSaveString(): String			Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String			Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.
getNotifiedAboutSunflare()		Hatására az entitás elpusztítja magát, ha nem átfúrt kérgű vagy nem üreges belsejű aszteroidán tartózkodik.
move(Asteroid)					Az entitás egy szomszédos aszteroidára lép.
move(StarGate)					Az entitás egy teleportkapura lép.
onTurn()						Minden kör elején hívott metódus, ami az autonóm viselkedést valósítja meg.



-------------------------------------------------------
Settler
-------------------------------------------------------
Ősosztályok
Printable -> Entity -> Settler

Interfészek
Drilling, Mining, ReactsToSunFlare, Moving

Attribútumok
BASE_RECIPE : Inventory			A bázis építésének receptje.
hadactionthisturn : boolean		Volt-e már akció ebben a körben.
inventory : Inventory			A telepes tárolója.
ROBOT_RECIPE : Inventory		A robot építésének receptje.
STARGATE_RECIPE : Inventory		A teleportkapu építésének receptje.
isRandom : boolean				Véletlenszerű viselkedést hajtson-e végre az entitás?
owner: Game						A játékot vezénylő objektumra mutató hivatkozás.
id : String						Egy adott objektumot azonosító egyedi jelölés.
asteroid : Asteroid 			Azt tárolja, hogy az adott entitás éppen melyik aszteroidán tartózkodik.

Metódusok
asteroidExploded()				Értesíti az entitást, hogy az aszteroida, amin állt megsemmisült. A konkrét implementáció az entitás típusától függ.
buildBase()						Bázis építése.
buildRobot()					Robot építése.
buildStarGate()					Teleportkapu építése.
die()							Elpusztítja az entitást.
drill()							A robot fúr egyet az aszteroidáján.
dropMaterial(Material)			Paraméterként kapott nyersanyag eldobása.
genSaveString(): String			Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String			Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.
getNotifiedAboutSunflare()		Hatására az entitás elpusztítja magát, ha nem átfúrt kérgű vagy nem üreges belsejű aszteroidán tartózkodik.
mine()							Bányászás.
move(Asteroid)					Az entitás egy szomszédos aszteroidára lép.
move(StarGate)					Az entitás egy teleportkapura lép.
placeStarGate(StarGate)			Teleportkapu lehelyezése.



//Új bejegyzés:-----------------------------------------------------

-------------------------------------------------------
StarGate
-------------------------------------------------------
Felelősség
A teleportkaput valósítja meg, ami aszteroidára helyezhető. Ha egy kapupár mindkét eleme le van helyezve egy-egy aszteroidára, akkor eljuthatunk rajtuk keresztül az egyikről a másik aszteroidára.

Ősosztályok
Printable -> Building -> StarGate

Interfészek
Moving, Controllable, ReactsToSunFlare

Attribútumok
isRandom : boolean				Véletlenszerű viselkedést hajtson-e végre az kapu, ha meghibásodott?
neighbour : StarGate			A kapu szomszédja (párja).
wasInSunFlare : boolean			Volt-e már napviharnak kitéve?
works : boolean					Működik-e?
asteroid : Asteroid				Azt az aszteroidát tárolja amelyiken az épület található.
hadActionThisTurn :	boolean		Végzett-e műveletet a jelenlegi játékkörben.
owner : Game					A játékot vezénylő objektumra mutató hivatkozás.
id : String						Egy adott objektumot azonosító egyedi jelölés.

Metódusok
destroy()						Elpusztítja magát.
genSaveString(): String			Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String			Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.
move(Asteroid)					A kapu egy szomszédos aszteroidára lép.
move(StarGate)					A kapu egy másik teleportkapura lép.
onPlace()						Aszteroidára történő lehelyezéskor hívódik.
onTurn()						Minden kör elején hívott metódus, ami az autonóm viselkedést valósítja meg. (Itt csak akkor van szerepe, ha már érte napvihar a kaput.)



-------------------------------------------------------
Sun
-------------------------------------------------------

Ősosztályok
Printable -> Planet -> Sun

Interfészek
Controllable

Attribútumok
asteroids : List<Asteroid>		A naphoy tartozó aszteroidák.
isRandom : boolean				Véletlenszerű viselkedést hajtson-e végre a nap?
owner : Game					A játékot vezénylő objektumra mutató hivatkozás.
id : String						Egy adott objektumot azonosító egyedi jelölés.

Metódusok
addAsteroid(Asteroid)			Új aszteroida hozzáadása a naphoz.
genSaveString(): String			Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String			Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.
onTurn()						Minden kör elején hívott metódus, ami az autonóm viselkedést valósítja meg.
removeAsteroid(Asteroid)		Aszteroida eltávolítása a nap tárolójából.
sunFlare()						Napvihar előidézése.



-------------------------------------------------------
Uran
-------------------------------------------------------
Ősosztályok
Printable -> Material -> Coal

Attribútumok
canEvaporate : boolean	El tud-e párologni az anyag egy aszteroida belsejéből?
exposedCounter : int	Számolja, hogy hány kör során volt feltárt aszteroidában, miközben az aszteroida napközelben volt.
isRadio : boolean		Radioaktív-e a nyersanyag?
name : String			Megadja a nyersanyag típusának nevét.
id : String				Egy adott objektumot azonosító egyedi jelölés.

Metódusok
exposedAndCloseToSun(Asteroid a)	Körönként egyszer kell hívni, amikor egy a nyersanyag egy aszteroida üregében van, az aszteroida kérge teljesen át van fúrva, és az aszteroida napközelben van.
genSaveString(): String				Visszaadja az objektum szerializálásához szükséges szöveget.
genUIString() : String				Visszaadja az objektumról a játékos számára lényeges információkat tartalmazó szöveget.




----------------------------------------------------------------

+---------------+
|	3. leadás	|
+---------------+

----------------------------------------------------------------

+---------------+
|	4. leadás	|
+---------------+

A változatások fejezetet kitörölhetjük.
----------------------------------------

======================================================
Use-case leírások:
======================================================

------------------------------------------------------
Urán visszahelyezése
------------------------------------------------------
Alternatív forgatókönyv
2.B.1. Ha az aszteroida napközelben van, akkor visszahelyezés után az aszteroida felrobban.		<- Nem azonnal robban fel.
2.B.2. A telepes elpusztul.
2.B.3. Az aszteroida szól minden szomszédjának, hogy elpusztult.

Javított változat:
2.B.1. Ha az aszteroida napközelben van, akkor egy belső számlálója növekszik. Ha a számláló elérte a 3-at, akkor a nyersanyag felrobban.
2.B.2. Ha a nyersanyag felrobbant, az aszteroida elpusztul.
2.B.3. Az aszteroidán lévő összes entitások reagálnak az aszteroida megsemmisülésére. (A robotok kivételével az öszzes objektum megsemmisül.)



------------------------------------------------------
Napvihar történik
------------------------------------------------------
Forgatókönyv
1. A nap amelyik kitör szól a game osztálynak, hogy napvihar történik.	<- Nem a Gamenek szól.
2. A game osztály szól minden aszteroidának, hogy napvihar van.	<-	Nem a Game szól.
3. Minden aszteroida minden rajta található entitást elpusztít.	<-	Csak a naphoz tartozók. + a kapuk csak elromlanak.
Alternatív forgatókönyv
3.A.1. Ha az aszteroida üreges, s kérgének vastagsága 0 akkor nem csinál semmit a rajta található entitásokkal.		<-	A kapu így is meghibásodik.

Javított változat:
Forgatókönyv
1. A nap amelyik kitör szól a saját aszteroidáinak, hogy napvihar történik.
2. Az értesített aszteroidák minden rajtuk található entitást értesítenek a napviharról.
3a. Ha nincs fedezékhely, az entitások megsemmisülnek.
4. A teleportkapuk "napvihar érte" állapotba kerülnek, ami hatására a további körökben véletleszerűen fognak mozogni az elérhető aszteroidák közt.
Alternatív forgatókönyv
3b. Ha az aszteroida üreges és kérgének vastagsága 0 akkor a rajta található entitások megmenekülnek. (A kapu ilyenkor is meghibásodik.)



------------------------------------------------------
Fúrás robottal, robban, van szomszéd
------------------------------------------------------
Alternatív forgatókönyv
2.B.1. Ha az aszteroida napközelben van és a kérge átfúrt, akkor egy belső számlálója növekszik. Ha a számláló elérte a 3-at, akkor a nyersanyag felrobban.
2.B.2. Ha a nyersanyag felrobbant, az aszteroida elpusztul.
2.B.3. Az aszteroidán lévő robot egy szomszédos aszteroidára lép.



------------------------------------------------------
Fúrás robottal, robban, nincs szomszéd
------------------------------------------------------
Alternatív forgatókönyv
2.B.1. Ha az aszteroida napközelben van és a kérge átfúrt, akkor egy belső számlálója növekszik. Ha a számláló elérte a 3-at, akkor a nyersanyag felrobban.
2.B.2. Ha a nyersanyag felrobbant, az aszteroida elpusztul.
2.B.3. Az aszteroidán lévő robot megsemmisül, mert nincs szomszédos aszteroida.



------------------------------------------------------
Fúrás telepessel, robban
------------------------------------------------------
Alternatív forgatókönyv
2.B.1. Ha az aszteroida napközelben van és a kérge átfúrt, akkor egy belső számlálója növekszik. Ha a számláló elérte a 3-at, akkor a nyersanyag felrobban.
2.B.2. Ha a nyersanyag felrobbant, az aszteroida elpusztul.
2.B.3. Az aszteroidán lévő telepes megsemmisül.






























